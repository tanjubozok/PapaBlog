// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PapaBlog.Data.Concrete.EfCore.Contexts;

namespace PapaBlog.Data.Migrations
{
    [DbContext(typeof(PapaBlogContext))]
    partial class PapaBlogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PapaBlog.Entities.Concrete.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CommentCount")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SeoAuther")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SeoDescription")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SeoTags")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ViewsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CommentCount = 120,
                            Content = "Test Article Content",
                            CreatedByName = "Test CreatedByName",
                            CreatedDate = new DateTime(2022, 5, 4, 23, 56, 57, 362, DateTimeKind.Local).AddTicks(8149),
                            Date = new DateTime(2022, 5, 4, 23, 56, 57, 362, DateTimeKind.Local).AddTicks(3464),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "Test ModifiedByName",
                            ModifiedDate = new DateTime(2022, 5, 4, 23, 56, 57, 362, DateTimeKind.Local).AddTicks(8741),
                            Note = "Test Note",
                            SeoAuther = "Test SeoAuther",
                            SeoDescription = "Test SeoDescription",
                            SeoTags = "Test SeoTags",
                            Thumbnail = "default.jpg",
                            Title = "Test Article",
                            UserId = 1,
                            ViewsCount = 10
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CommentCount = 220,
                            Content = "Test Article Content",
                            CreatedByName = "Test CreatedByName",
                            CreatedDate = new DateTime(2022, 5, 4, 23, 56, 57, 363, DateTimeKind.Local).AddTicks(2039),
                            Date = new DateTime(2022, 5, 4, 23, 56, 57, 363, DateTimeKind.Local).AddTicks(2033),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "Test ModifiedByName",
                            ModifiedDate = new DateTime(2022, 5, 4, 23, 56, 57, 363, DateTimeKind.Local).AddTicks(2041),
                            Note = "Test Note",
                            SeoAuther = "Test SeoAuther",
                            SeoDescription = "Test SeoDescription",
                            SeoTags = "Test SeoTags",
                            Thumbnail = "default.jpg",
                            Title = "Test Article",
                            UserId = 1,
                            ViewsCount = 20
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CommentCount = 320,
                            Content = "Test Article Content",
                            CreatedByName = "Test CreatedByName",
                            CreatedDate = new DateTime(2022, 5, 4, 23, 56, 57, 363, DateTimeKind.Local).AddTicks(2057),
                            Date = new DateTime(2022, 5, 4, 23, 56, 57, 363, DateTimeKind.Local).AddTicks(2051),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "Test ModifiedByName",
                            ModifiedDate = new DateTime(2022, 5, 4, 23, 56, 57, 363, DateTimeKind.Local).AddTicks(2059),
                            Note = "Test Note",
                            SeoAuther = "Test SeoAuther",
                            SeoDescription = "Test SeoDescription",
                            SeoTags = "Test SeoTags",
                            Thumbnail = "default.jpg",
                            Title = "Test Article",
                            UserId = 1,
                            ViewsCount = 30
                        });
                });

            modelBuilder.Entity("PapaBlog.Entities.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "System",
                            CreatedDate = new DateTime(2022, 5, 4, 23, 56, 57, 368, DateTimeKind.Local).AddTicks(9097),
                            Description = "C#",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "System",
                            ModifiedDate = new DateTime(2022, 5, 4, 23, 56, 57, 368, DateTimeKind.Local).AddTicks(9112),
                            Name = "C#",
                            Note = "C#"
                        },
                        new
                        {
                            Id = 2,
                            CreatedByName = "System",
                            CreatedDate = new DateTime(2022, 5, 4, 23, 56, 57, 368, DateTimeKind.Local).AddTicks(9150),
                            Description = "Java",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "System",
                            ModifiedDate = new DateTime(2022, 5, 4, 23, 56, 57, 368, DateTimeKind.Local).AddTicks(9152),
                            Name = "Java",
                            Note = "Java"
                        },
                        new
                        {
                            Id = 3,
                            CreatedByName = "System",
                            CreatedDate = new DateTime(2022, 5, 4, 23, 56, 57, 368, DateTimeKind.Local).AddTicks(9160),
                            Description = "Python",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "System",
                            ModifiedDate = new DateTime(2022, 5, 4, 23, 56, 57, 368, DateTimeKind.Local).AddTicks(9162),
                            Name = "Python",
                            Note = "Python"
                        });
                });

            modelBuilder.Entity("PapaBlog.Entities.Concrete.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleId = 1,
                            CreatedByName = "Admin",
                            CreatedDate = new DateTime(2022, 5, 4, 23, 56, 57, 372, DateTimeKind.Local).AddTicks(2666),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "Admin",
                            ModifiedDate = new DateTime(2022, 5, 4, 23, 56, 57, 372, DateTimeKind.Local).AddTicks(2681),
                            Note = "This is a note",
                            Text = "This is a comment"
                        },
                        new
                        {
                            Id = 2,
                            ArticleId = 2,
                            CreatedByName = "Admin",
                            CreatedDate = new DateTime(2022, 5, 4, 23, 56, 57, 372, DateTimeKind.Local).AddTicks(2718),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "Admin",
                            ModifiedDate = new DateTime(2022, 5, 4, 23, 56, 57, 372, DateTimeKind.Local).AddTicks(2720),
                            Note = "This is a note",
                            Text = "This is a comment"
                        },
                        new
                        {
                            Id = 3,
                            ArticleId = 3,
                            CreatedByName = "Admin",
                            CreatedDate = new DateTime(2022, 5, 4, 23, 56, 57, 372, DateTimeKind.Local).AddTicks(2727),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "Admin",
                            ModifiedDate = new DateTime(2022, 5, 4, 23, 56, 57, 372, DateTimeKind.Local).AddTicks(2729),
                            Note = "This is a note",
                            Text = "This is a comment"
                        });
                });

            modelBuilder.Entity("PapaBlog.Entities.Concrete.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "Admin",
                            CreatedDate = new DateTime(2022, 5, 4, 23, 56, 57, 374, DateTimeKind.Local).AddTicks(8284),
                            Description = "Admin",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "Admin",
                            ModifiedDate = new DateTime(2022, 5, 4, 23, 56, 57, 374, DateTimeKind.Local).AddTicks(8295),
                            Name = "Admin",
                            Note = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedByName = "Admin",
                            CreatedDate = new DateTime(2022, 5, 4, 23, 56, 57, 374, DateTimeKind.Local).AddTicks(8329),
                            Description = "User",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "Admin",
                            ModifiedDate = new DateTime(2022, 5, 4, 23, 56, 57, 374, DateTimeKind.Local).AddTicks(8330),
                            Name = "User",
                            Note = "User"
                        });
                });

            modelBuilder.Entity("PapaBlog.Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(500)");

                    b.Property<string>("Picture")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "Admin",
                            CreatedDate = new DateTime(2022, 5, 4, 23, 56, 57, 388, DateTimeKind.Local).AddTicks(8061),
                            Description = "Ilk admin kullanıcısı",
                            Email = "tanjubo@gmail.com",
                            FirstName = "Tanju",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "BO",
                            ModifiedByName = "Admin",
                            ModifiedDate = new DateTime(2022, 5, 4, 23, 56, 57, 388, DateTimeKind.Local).AddTicks(8078),
                            Note = "Admin kullanıcısı",
                            PasswordHash = new byte[] { 48, 49, 57, 50, 48, 50, 51, 97, 55, 98, 98, 100, 55, 51, 50, 53, 48, 53, 49, 54, 102, 48, 54, 57, 100, 102, 49, 56, 98, 53, 48, 48 },
                            Picture = "https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?s=200&r=pg&d=mm",
                            RoleId = 1,
                            UserName = "tanjubo"
                        });
                });

            modelBuilder.Entity("PapaBlog.Entities.Concrete.Article", b =>
                {
                    b.HasOne("PapaBlog.Entities.Concrete.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PapaBlog.Entities.Concrete.User", "User")
                        .WithMany("Articles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PapaBlog.Entities.Concrete.Comment", b =>
                {
                    b.HasOne("PapaBlog.Entities.Concrete.Article", "Article")
                        .WithMany("Comments")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("PapaBlog.Entities.Concrete.User", b =>
                {
                    b.HasOne("PapaBlog.Entities.Concrete.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PapaBlog.Entities.Concrete.Article", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("PapaBlog.Entities.Concrete.Category", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("PapaBlog.Entities.Concrete.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PapaBlog.Entities.Concrete.User", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
